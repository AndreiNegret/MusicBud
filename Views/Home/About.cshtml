@{
    ViewData["Title"] = "About";
}
<h1>@ViewData["Title"]</h1>


@*<script defer src="~/js/Modules/face-api.min.js"></script>
    <script defer src="~/js/Modules/webCamFeed.js"></script>
    <style>
        .snapshot {
            margin: 0;
            padding: 0;
            width: 100%;
            height: 100%;
            display: flex;
            justify-content: center;
            align-items: center;
        }

            .snapshot video {
                width: 100%;
                height: 100%;
            }
    </style>

    <body>
        <video id="video" width="720" height="560" autoplay muted></video>
    </body>

    <button id="snap">Take photo</button>*@


@*Varianta care merge*@

<div class="snapshot-camera-container">
    <video class="snapshot-camera"></video>
    <button class="btn my-3">
        Take a snapshot
    </button>
</div>

<script defer src="~/js/Modules/webCamFeed.js"></script>

@*Varianta 2*@

@*Stream video via webcam*@
<!--<div class="video-wrap">
    <video id="video" playsinline autoplay></video>
</div>-->
@*Trigger canvas web API*@
<!--<div class="controller">
    <button id="snap">Capture</button>
</div>-->
@*Webcam video snapshot*@
<!--<canvas id="canvas" width="640" height="480"></canvas>

<script>

    'use strict';

    const video = document.getElementById('video');
    const canvas = document.getElementById('canvas');
    const snap = document.getElementById('snap');
    const errorMsgElement = document.getElementById('span#ErrorMsg');

    const constraints = {
        audio: true,
        video:{
            width: 1280, height: 720
        }
    };

    //Access webcam
    async function init() {
        try {
            const stream = await navigator.mediaDevices.getUserMedia(constraints);
            handleSuccess(stream);
        }
        catch (e) {
            errorMsgElement.innerHTML = `navigator.getUserMedia.error:${e.toString()}`;
        }
    }

    //Success
    function handleSuccess(stream) {
        window.stream = stream;
        video.srcObject = stream;
    }

    //Load init
    init();

    //Dram image
    var context = canvas.getContext('2d');
    snap.addEventListener("click", function () {
        context.drawImage(video, 0, 0, 640, 480);
    });

</script>-->
@*Varianta 3*@
@*<html>
    <body>
        <video id="video" width="640" height="480" autoplay></video>
        <button id="snap">take photo</button>
        <canvas id="canvas" width="640" height="480"></canvas>
        <script src="~/js/webcamerafeed/camera.js"></script>
    </body>
    </html>*@

@*Varianta webcameasyjs*@

@*<html>
    <head>
        <script type="text/javascript" src="https://unpkg.com/webcam-easy/dist/webcam-easy.min.js"></script>
    </head>
    </html>

    <video id="webcam" autoplay playsinline width="640" height="480"></video>
    <canvas id="canvas" class="d-none"></canvas>
    <audio id="snapSound" src="audio/snap.wav" preload="auto"></audio>

    <script defer src="~/js/WebCameraFeed/webcam-easy.js"></script>
    <script defer src="~/js/WebCameraFeed/webCamera.js"></script>*@

